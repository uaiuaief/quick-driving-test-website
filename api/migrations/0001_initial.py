# Generated by Django 3.2.3 on 2021-06-11 02:18

import api.models
import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='date joined')),
                ('is_admin', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', api.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AvailableDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('date', models.DateField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Proxy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('ip', models.CharField(max_length=80, unique=True)),
                ('last_used', models.DateTimeField(default=datetime.datetime.now)),
                ('is_banned', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestCenter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=150)),
                ('customers', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('driving_licence_number', models.CharField(max_length=30)),
                ('test_ref', models.CharField(max_length=8, validators=[django.core.validators.MinLengthValidator(8)])),
                ('theory_test_number', models.CharField(blank=True, max_length=16, null=True)),
                ('recent_test_failure', models.DateField(blank=True, null=True)),
                ('earliest_test_date', models.DateField(blank=True, default=django.utils.timezone.now)),
                ('latest_test_date', models.DateField(blank=True, null=True)),
                ('earliest_time', models.TimeField(blank=True, default=datetime.datetime(1900, 1, 1, 7, 0))),
                ('latest_time', models.TimeField(blank=True, default=datetime.datetime(1900, 1, 1, 18, 0))),
                ('last_crawled', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('automatic_booking', models.BooleanField(default=False)),
                ('info_validation', models.CharField(choices=[('unchecked', 'unchecked'), ('valid', 'valid'), ('invalid', 'invalid')], default='unchecked', max_length=20)),
                ('first_name', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(1)])),
                ('last_name', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(1)])),
                ('mobile_number', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(8)])),
                ('main_test_center', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.testcenter')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AvailableTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('time', models.TimeField()),
                ('date', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='available_time', to='api.availabledate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='availabledate',
            name='test_center',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='available_dates', to='api.testcenter'),
        ),
    ]
